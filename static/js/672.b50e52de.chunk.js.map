{"version":3,"file":"static/js/672.b50e52de.chunk.js","mappings":"yPACA,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAsH,+BAAtH,EAAiK,6B,SCMpJA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAWMC,EAAO,CACXJ,MAAAA,EACAE,SAAAA,GAGIG,EAAe,SAAAC,GACjBA,EAAMC,iBACFX,EACFY,EAAAA,GAAAA,MAAY,oDAEZd,GAASe,EAAAA,EAAAA,IAAML,IACfM,IAEL,EAEOA,EAAQ,WACZT,EAAS,IACTE,EAAY,GACb,EAGD,OACI,kBAAMQ,SAAUN,EAAcO,aAAa,MAAMC,UAAWC,EAA5D,WACA,mBAAOD,UAAWC,EAAlB,mBAEE,kBAAOC,KAAK,QAAQC,KAAK,QACzBC,MAAOjB,EACPkB,UAAQ,EACRC,SApCuB,SAACC,GAC9BnB,EAASmB,EAAIC,OAAOJ,MACrB,EAmCOJ,UAAWC,QAGb,mBAAOD,UAAWC,EAAlB,sBAEE,kBAAOC,KAAK,WAAWC,KAAK,WAC5BC,MAAOf,EACPgB,UAAQ,EACRC,SAzC0B,SAACC,GACjCjB,EAAYiB,EAAIC,OAAOJ,MACxB,EAwCOJ,UAAWC,QAGb,mBAAQC,KAAK,SAASJ,SAAUN,EAAcQ,UAAWC,EAAzD,qBAIP,EC7DD,EANkB,WAChB,OACI,SAACrB,EAAD,GAEL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","views/loginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_form\":\"LoginForm_login_form__5NzpT\",\"login_lable\":\"LoginForm_login_lable__5OdNT\",\"login_input\":\"LoginForm_login_input__rFAz0\",\"login_btn\":\"LoginForm_login_btn__aGlXD\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { getError } from '../../redux/auth/authSelectors';\nimport { toast } from \"react-toastify\";\nimport style from \"./LoginForm.module.css\";\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(getError);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const handleEmailInputChange = (evt) => {\n    setEmail(evt.target.value);\n  };\n\n  const handlePasswordInputChange = (evt) => {\n    setPassword(evt.target.value);\n  };\n\n  const user = {\n    email,\n    password\n  };\n\n  const handleSubmit = event => {\n      event.preventDefault();\n      if (error) {\n        toast.error('Error. Please check the correctness of the data');\n      } else {\n        dispatch(logIn(user));\n        reset();\n      }\n  };\n\n    const reset = () => {\n      setEmail(\"\");\n      setPassword(\"\");\n    };\n  \n\n    return (\n        <form onSubmit={handleSubmit} autoComplete=\"off\" className={style.login_form}>\n        <label className={style.login_lable}>\n          Email\n          <input type=\"email\" name=\"email\" \n          value={email}\n          required\n          onChange={handleEmailInputChange}\n          className={style.login_input}\n        />\n        </label>\n        <label className={style.login_lable}>\n          Password\n          <input type=\"password\" name=\"password\" \n          value={password} \n          required\n          onChange={handlePasswordInputChange}\n          className={style.login_input}\n        />\n        </label>\n        <button type=\"submit\" onSubmit={handleSubmit} className={style.login_btn}>Login</button>\n      </form>\n    );\n        \n};","import { LoginForm } from \"../components/LoginForm/LoginForm\";\n\nconst LoginView = () => {\n  return (\n      <LoginForm />\n  );\n};\n\nexport default LoginView;"],"names":["LoginForm","dispatch","useDispatch","error","useSelector","getError","useState","email","setEmail","password","setPassword","user","handleSubmit","event","preventDefault","toast","logIn","reset","onSubmit","autoComplete","className","style","type","name","value","required","onChange","evt","target"],"sourceRoot":""}