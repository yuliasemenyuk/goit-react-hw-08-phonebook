{"version":3,"file":"static/js/768.25872f6c.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.js","components/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","views/ContactsView.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\nexport const getFilterValue = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"filter_input\":\"Filter_filter_input__eu2zm\",\"filter_lable\":\"Filter_filter_lable__8Z1vL\"};","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { filterContacts } from \"../../redux/contacts/contactsSlice\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const [filter, setFilter] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleFilterInpChange = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  useEffect(() => {\n    dispatch(filterContacts(filter));\n  });\n\n\n  return (\n    <label className={style.filter_lable}>\n      Find contact by name\n      <input\n        placeholder=\"&#x1F50E;  Search...\"\n        className={style.filter_input}\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterInpChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"saving_form\":\"ContactsForm_saving_form__tW2mg\",\"saving_lable\":\"ContactsForm_saving_lable__WFbin\",\"input\":\"ContactsForm_input__UjXFK\",\"saving_btn\":\"ContactsForm_saving_btn__AZNul\"};","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts, getIsLoading } from \"../../redux/contacts/contactsSelectors\";\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\nimport style from \"./ContactsForm.module.css\";\n\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameInputChange = (evt) => {\n    setName(evt.target.value);\n  };\n\n  const handleNumberInputChange = (evt) => {\n    setNumber(evt.target.value);\n  };\n\n  const contacts = useSelector(getContacts);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.warning(`${name} is already in contacts`);\n    };\n\n    const contact = {\n      name, \n      number\n    };\n\n    dispatch(addContact(contact));\n\n    toast.success(`Contact '${name}' is added`);\n    \n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <form onSubmit={handleSubmit} className={style.saving_form}>\n      <label className={style.saving_lable}>\n        Name{\" \"}\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleNameInputChange}\n        />\n      </label>\n      <label className={style.saving_lable}>\n        Number\n        <input\n          className={style.input}\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          required\n          onChange={handleNumberInputChange}\n        />\n      </label>\n      <button\n        className={style.saving_btn}\n        onSubmit={handleSubmit}\n        type=\"submit\"\n        disabled={isLoading}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","export const ContactItem = ({ contactItem }) => (\n  <p>\n    {contactItem.name} : {contactItem.number}\n  </p>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_list\":\"ContactList_contacts_list__jhchV\",\"contact_list_item\":\"ContactList_contact_list_item__Ts0bB\",\"contact_item_btn\":\"ContactList_contact_item_btn__mkfeP\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { ContactItem } from \"../ContactItem/ContactItem\";\nimport { getIsLoading } from \"../../redux/contacts/contactsSelectors\";\nimport { deleteContact } from \"../../redux/contacts/contactsOperations\";\nimport { getFilterValue, getContacts } from \"../../redux/contacts/contactsSelectors\";\nimport { toast } from \"react-toastify\";\nimport style from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => dispatch(deleteContact(id));\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterValue);\n\n  const filteredContacts = (contacts) => {\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n      <ul className={style.contacts_list}>\n      {filteredContacts(contacts).map(({ id, name, number }) => (\n        <li key={id} className={style.contact_list_item}>\n          <ContactItem contactItem={{ name, number, id }}></ContactItem>\n          \n          <button className={style.contact_item_btn}\n             onClick={() => {\n              handleDelete(id);\n              toast.success(`Contact '${name}' deleted`);\n            }}\n            disabled={isLoading}\n          >\n            Delete\n          </button>\n\n        </li>\n      ))}\n    </ul>\n    );\n };\n  \n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"title\":\"App_title__Xrt9W\"};","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getIsLoading, getError } from \"redux/contacts/contactsSelectors\";\nimport { fetchContacts } from \"redux/contacts/contactsOperations\";\nimport Filter from \"../components/Filter/Filter\";\nimport { ContactsForm } from \"../components/ContactsForm/ContactsForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\n\n\nimport { LineWave as Loader } from  'react-loader-spinner';\nimport style from \"../components/App.module.css\";\n\n    const ContactsView = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n    \n      return (\n        <div className={style.container}>\n            \n           <h1 className={style.title}>Phonebook</h1>\n           <ContactsForm />\n           <h2 className={style.title}>Contacts</h2>\n           <Filter />\n           {isLoading && !error ? <Loader/> : \n            <ContactList />\n            }\n           \n        </div>\n      )\n};\n\nexport default ContactsView;"],"names":["getContacts","state","contacts","items","getFilterValue","filter","getIsLoading","isLoading","getError","error","useState","setFilter","dispatch","useDispatch","useEffect","filterContacts","className","style","placeholder","type","value","onChange","event","currentTarget","ContactsForm","name","setName","number","setNumber","useSelector","handleSubmit","preventDefault","find","contact","toLowerCase","toast","addContact","reset","onSubmit","pattern","title","required","evt","target","disabled","ContactItem","contactItem","ContactList","normalizedFilter","includes","filteredContacts","map","id","onClick","deleteContact","handleDelete","fetchContacts"],"sourceRoot":""}