{"version":3,"file":"static/js/457.dbc093f8.chunk.js","mappings":"iOACA,EAAgC,oCAAhC,EAAqF,qCAArF,EAA2I,qCAA3I,EAA+L,mC,SCIlLA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAcMC,EAAO,CACXN,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GASIG,EAAQ,WACZN,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBAAMG,SAba,SAAAC,GACnBA,EAAMC,iBACNb,GAASc,EAAAA,EAAAA,IAASL,IAClBC,GACD,EAS+BK,aAAa,MAAMC,UAAWC,EAA5D,WACE,mBAAOD,UAAWC,EAAlB,sBAEE,kBAAOC,KAAK,OAAOf,KAAK,OAAOgB,MAAOhB,EACtCiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAtCwB,SAACC,GAC7BpB,EAAQoB,EAAIC,OAAON,MACpB,EAoCsCH,UAAWC,QAE9C,mBAAOD,UAAWC,EAAlB,mBAEE,kBAAOC,KAAK,QAAQf,KAAK,QAAQgB,MAAOd,EACxCiB,UAAQ,EACRC,SAxCyB,SAACC,GAC9BlB,EAASkB,EAAIC,OAAON,MACrB,EAsCuCH,UAAWC,QAE/C,mBAAOD,UAAWC,EAAlB,sBAEE,kBAAOC,KAAK,WAAWf,KAAK,WAAWgB,MAAOZ,EAC9Ce,UAAQ,EACRC,SA1C4B,SAACC,GACjChB,EAAYgB,EAAIC,OAAON,MACxB,EAwC0CH,UAAWC,QAElD,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,sBAKL,EC7DD,EANqB,WACnB,OACI,SAAClB,EAAD,GAEL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","views/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"register_form\":\"RegisterForm_register_form__WJBYe\",\"register_lable\":\"RegisterForm_register_lable__re7mF\",\"register_input\":\"RegisterForm_register_input__8Ebn6\",\"register_btn\":\"RegisterForm_register_btn__1pW5X\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport style from \"./RegisterForm.module.css\";\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleNameInputChange = (evt) => {\n    setName(evt.target.value);\n  };\n\n  const handleEmailInputChange = (evt) => {\n    setEmail(evt.target.value);\n  };\n\n  const handlePasswordInputChange = (evt) => {\n    setPassword(evt.target.value);\n  };\n\n  const user = {\n    name, \n    email,\n    password\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register(user));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className={style.register_form}>\n      <label className={style.register_lable}>\n        Username\n        <input type=\"text\" name=\"name\" value={name} \n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleNameInputChange} className={style.register_input}/>\n      </label>\n      <label className={style.register_lable}>\n        Email\n        <input type=\"email\" name=\"email\" value={email} \n        required\n        onChange={handleEmailInputChange} className={style.register_input}/>\n      </label>\n      <label className={style.register_lable}>\n        Password\n        <input type=\"password\" name=\"password\" value={password} \n        required\n        onChange={handlePasswordInputChange} className={style.register_input}/>\n      </label>\n      <button type=\"submit\" className={style.register_btn}>\n        Signup\n      </button>\n    </form>\n  );\n};\n","import { RegisterForm} from \"../components/RegisterForm/RegisterForm\";\n\nconst RegisterView = () => {\n  return (\n      <RegisterForm />\n  );\n};\n\nexport default RegisterView;\n"],"names":["RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","user","reset","onSubmit","event","preventDefault","register","autoComplete","className","style","type","value","pattern","title","required","onChange","evt","target"],"sourceRoot":""}