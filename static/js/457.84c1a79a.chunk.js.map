{"version":3,"file":"static/js/457.84c1a79a.chunk.js","mappings":"wPAMaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,QAAQC,IAAIJ,GACZ,IAAMK,GAAeJ,EAAAA,EAAAA,IAAYK,EAAAA,IACjCH,QAAQC,IAAIC,GAIZ,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAcMC,EAAO,CACXN,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GASIG,EAAQ,WACZN,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBAAMG,SAba,SAAAC,GACnBA,EAAMC,iBACNpB,GAASqB,EAAAA,EAAAA,IAASL,IAClBC,GACD,EAS+BK,aAAa,MAA3C,WACE,yCAEE,kBAAOC,KAAK,OAAOb,KAAK,OAAOc,MAAOd,EAAMe,SAlCpB,SAACC,GAC7Bf,EAAQe,EAAIC,OAAOH,MACpB,QAkCG,sCAEE,kBAAOD,KAAK,QAAQb,KAAK,QAAQc,MAAOZ,EAAOa,SAlCtB,SAACC,GAC9Bb,EAASa,EAAIC,OAAOH,MACrB,QAkCG,yCAEE,kBAAOD,KAAK,WAAWb,KAAK,WAAWc,MAAOV,EAAUW,SAlC5B,SAACC,GACjCX,EAAYW,EAAIC,OAAOH,MACxB,QAkCG,mBAAQD,KAAK,SAAb,sBAGL,EC3DD,EANqB,WACnB,OACI,SAACxB,EAAD,GAEL,C","sources":["components/RegisterForm/RegisterForm.js","views/RegisterView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport styles from \"./RegisterForm.module.css\";\nimport { getIsLoggedIn, getUser, getIsRefreshing } from 'redux/auth/authSelectors';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const ISLOGGEDIN = useSelector(getIsLoggedIn);\n  console.log(ISLOGGEDIN);\n  const ISREFRESHING = useSelector(getIsRefreshing);\n  console.log(ISREFRESHING);\n  // const USER = useSelector(getUser);\n  // console.log(user);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleNameInputChange = (evt) => {\n    setName(evt.target.value);\n  };\n\n  const handleEmailInputChange = (evt) => {\n    setEmail(evt.target.value);\n  };\n\n  const handlePasswordInputChange = (evt) => {\n    setPassword(evt.target.value);\n  };\n\n  const user = {\n    name, \n    email,\n    password\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register(user));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label >\n        Username\n        <input type=\"text\" name=\"name\" value={name} onChange={handleNameInputChange}/>\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" value={email} onChange={handleEmailInputChange}/>\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" value={password} onChange={handlePasswordInputChange}/>\n      </label>\n      <button type=\"submit\">Signup</button>\n    </form>\n  );\n};\n","import { RegisterForm} from \"../components/RegisterForm/RegisterForm\";\n\nconst RegisterView = () => {\n  return (\n      <RegisterForm />\n  );\n};\n\nexport default RegisterView;\n"],"names":["RegisterForm","dispatch","useDispatch","ISLOGGEDIN","useSelector","getIsLoggedIn","console","log","ISREFRESHING","getIsRefreshing","useState","name","setName","email","setEmail","password","setPassword","user","reset","onSubmit","event","preventDefault","register","autoComplete","type","value","onChange","evt","target"],"sourceRoot":""}